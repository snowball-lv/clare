

// #define NODE(name, params, init)

#define SIMPLE(name)    NODE(name, (), {})

SIMPLE(None)
SIMPLE(Any)
SIMPLE(Nop)

NODE(Mov, (Node *dst, Node *src), {
    self->kids[0] = dst;
    self->kids[1] = src;
})

NODE(Tmp, (), {
    self->id = NewTmpID();
})

NODE(Add, (Node *left, Node *right), {
    self->kids[0] = left;
    self->kids[1] = right;
})

NODE(I32, (int32_t i32), {
    self->i32 = i32;
})

NODE(Float, (float f), {
    self->f = f;
})

NODE(Seq, (Node *left, Node *right), {
    self->kids[0] = left;
    self->kids[1] = right;
})

NODE(Ret, (Node *node), {
    self->kids[0] = node;
})

NODE(Arg, (int arg_index), {
    self->arg_index = arg_index;
})

NODE(Call, (const char *fname, List *args), {
    self->fname = fname;
    self->args = args;
})

NODE(Branch, (Node *cond, Node *t, Node *f), {
    self->kids[0] = cond;
    self->kids[1] = t;
    self->kids[2] = f;
})

NODE(Loop, (Node *cond, Node *t), {
    self->kids[0] = cond;
    self->kids[1] = t;
})

NODE(Eq, (Node *left, Node *right), {
    self->kids[0] = left;
    self->kids[1] = right;
})

NODE(Lt, (Node *left, Node *right), {
    self->kids[0] = left;
    self->kids[1] = right;
})

#undef SIMPLE
