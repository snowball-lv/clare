

require "fileutils"


CFLAGS = [
    "-c",
    "-I inc",
    "-O2",
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Werror"
]

LFLAGS = [
    "-L bin",
    "-l clare"
]

FileList["cli/*"].each do |dir|

    name = File.basename(dir)
    srcs = FileList["cli/#{name}/**/*.c"]
    deps = srcs.pathmap("deps/%X.deps")
    objs = srcs.pathmap("out/%X.o")
    bin = "bin/#{name}"
    
    srcs.zip(deps, objs).each do |src, dep, obj|
        
        raise "Missing dependency file: #{dep}" unless File.exist?(dep)
        deps = File.read(dep).split(/\s+/)
        
        directory(File.dirname(obj))
        file(obj => deps + [File.dirname(obj)]) do
            sh "gcc #{CFLAGS.join(" ")} #{src} -o #{obj}"
        end
    end
    
    directory File.dirname(bin)
    file bin => objs + [File.dirname(bin)] do
        sh "gcc #{LFLAGS.join(" ")} #{objs.join(" ")} -o #{bin}"
    end
    
    task :default => bin
end
