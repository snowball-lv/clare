Grammar

    0 $accept: module $end

    1 module: flist
    2       | %empty

    3 flist: flist function
    4      | function

    5 function: FUNCTION ID COLON type function_content END

    6 function_content: function_params function_body

    7 function_params: PARAMS param_decls
    8                | PARAMS
    9                | %empty

   10 param_decls: param_decls param_decl
   11            | param_decl

   12 param_decl: ID COLON type

   13 function_body: BODY stm_list
   14              | BODY

   15 stm_list: stm_list stm
   16         | stm

   17 stm: RETURN exp
   18    | exp
   19    | var_decl
   20    | WHILE exp DO stm_list END
   21    | exp ASG exp

   22 var_decl: ID COLON type ASG exp

   23 exp: L_PAREN exp R_PAREN
   24    | ID
   25    | INT
   26    | STR
   27    | fcall
   28    | exp ADD exp
   29    | exp SUB exp
   30    | exp MUL exp
   31    | exp DIV exp
   32    | exp LT exp
   33    | exp L_BRACKET exp R_BRACKET
   34    | SUB exp

   35 fcall: ID L_PAREN fcall_args R_PAREN
   36      | ID L_PAREN R_PAREN

   37 fcall_args: fcall_args COMMA exp
   38           | exp

   39 type: TYPE_INT
   40     | TYPE_STR
   41     | type L_BRACKET R_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
PARAMS (259) 7 8
BODY (260) 13 14
END (261) 5 20
WHILE (262) 20
DO (263) 20
RETURN (264) 17
TYPE_INT (265) 39
TYPE_STR (266) 40
ID (267) 5 12 22 24 35 36
COLON (268) 5 12 22
ASG (269) 21 22
L_PAREN (270) 23 35 36
R_PAREN (271) 23 35 36
L_BRACKET (272) 33 41
R_BRACKET (273) 33 41
INT (274) 25
STR (275) 26
COMMA (276) 37
UMINUS (277)
ADD (278) 28
SUB (279) 29 34
MUL (280) 30
DIV (281) 31
LT (282) 32
SIMPLE (283)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
module (30)
    on left: 1 2, on right: 0
flist (31)
    on left: 3 4, on right: 1 3
function (32)
    on left: 5, on right: 3 4
function_content (33)
    on left: 6, on right: 5
function_params (34)
    on left: 7 8 9, on right: 6
param_decls (35)
    on left: 10 11, on right: 7 10
param_decl (36)
    on left: 12, on right: 10 11
function_body (37)
    on left: 13 14, on right: 6
stm_list (38)
    on left: 15 16, on right: 13 15 20
stm (39)
    on left: 17 18 19 20 21, on right: 15 16
var_decl (40)
    on left: 22, on right: 19
exp (41)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34, on right: 17 18 20
    21 22 23 28 29 30 31 32 33 34 37 38
fcall (42)
    on left: 35 36, on right: 27
fcall_args (43)
    on left: 37 38, on right: 35 37
type (44)
    on left: 39 40 41, on right: 5 12 22 41


State 0

    0 $accept: . module $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (module)

    module    go to state 2
    flist     go to state 3
    function  go to state 4


State 1

    5 function: FUNCTION . ID COLON type function_content END

    ID  shift, and go to state 5


State 2

    0 $accept: module . $end

    $end  shift, and go to state 6


State 3

    1 module: flist .
    3 flist: flist . function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (module)

    function  go to state 7


State 4

    4 flist: function .

    $default  reduce using rule 4 (flist)


State 5

    5 function: FUNCTION ID . COLON type function_content END

    COLON  shift, and go to state 8


State 6

    0 $accept: module $end .

    $default  accept


State 7

    3 flist: flist function .

    $default  reduce using rule 3 (flist)


State 8

    5 function: FUNCTION ID COLON . type function_content END

    TYPE_INT  shift, and go to state 9
    TYPE_STR  shift, and go to state 10

    type  go to state 11


State 9

   39 type: TYPE_INT .

    $default  reduce using rule 39 (type)


State 10

   40 type: TYPE_STR .

    $default  reduce using rule 40 (type)


State 11

    5 function: FUNCTION ID COLON type . function_content END
   41 type: type . L_BRACKET R_BRACKET

    PARAMS     shift, and go to state 12
    L_BRACKET  shift, and go to state 13

    $default  reduce using rule 9 (function_params)

    function_content  go to state 14
    function_params   go to state 15


State 12

    7 function_params: PARAMS . param_decls
    8                | PARAMS .

    ID  shift, and go to state 16

    $default  reduce using rule 8 (function_params)

    param_decls  go to state 17
    param_decl   go to state 18


State 13

   41 type: type L_BRACKET . R_BRACKET

    R_BRACKET  shift, and go to state 19


State 14

    5 function: FUNCTION ID COLON type function_content . END

    END  shift, and go to state 20


State 15

    6 function_content: function_params . function_body

    BODY  shift, and go to state 21

    function_body  go to state 22


State 16

   12 param_decl: ID . COLON type

    COLON  shift, and go to state 23


State 17

    7 function_params: PARAMS param_decls .
   10 param_decls: param_decls . param_decl

    ID  shift, and go to state 16

    $default  reduce using rule 7 (function_params)

    param_decl  go to state 24


State 18

   11 param_decls: param_decl .

    $default  reduce using rule 11 (param_decls)


State 19

   41 type: type L_BRACKET R_BRACKET .

    $default  reduce using rule 41 (type)


State 20

    5 function: FUNCTION ID COLON type function_content END .

    $default  reduce using rule 5 (function)


State 21

   13 function_body: BODY . stm_list
   14              | BODY .

    WHILE    shift, and go to state 25
    RETURN   shift, and go to state 26
    ID       shift, and go to state 27
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    $default  reduce using rule 14 (function_body)

    stm_list  go to state 32
    stm       go to state 33
    var_decl  go to state 34
    exp       go to state 35
    fcall     go to state 36


State 22

    6 function_content: function_params function_body .

    $default  reduce using rule 6 (function_content)


State 23

   12 param_decl: ID COLON . type

    TYPE_INT  shift, and go to state 9
    TYPE_STR  shift, and go to state 10

    type  go to state 37


State 24

   10 param_decls: param_decls param_decl .

    $default  reduce using rule 10 (param_decls)


State 25

   20 stm: WHILE . exp DO stm_list END

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 39
    fcall  go to state 36


State 26

   17 stm: RETURN . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 40
    fcall  go to state 36


State 27

   22 var_decl: ID . COLON type ASG exp
   24 exp: ID .
   35 fcall: ID . L_PAREN fcall_args R_PAREN
   36      | ID . L_PAREN R_PAREN

    COLON    shift, and go to state 41
    L_PAREN  shift, and go to state 42

    $default  reduce using rule 24 (exp)


State 28

   23 exp: L_PAREN . exp R_PAREN

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 43
    fcall  go to state 36


State 29

   25 exp: INT .

    $default  reduce using rule 25 (exp)


State 30

   26 exp: STR .

    $default  reduce using rule 26 (exp)


State 31

   34 exp: SUB . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 44
    fcall  go to state 36


State 32

   13 function_body: BODY stm_list .
   15 stm_list: stm_list . stm

    WHILE    shift, and go to state 25
    RETURN   shift, and go to state 26
    ID       shift, and go to state 27
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    $default  reduce using rule 13 (function_body)

    stm       go to state 45
    var_decl  go to state 34
    exp       go to state 35
    fcall     go to state 36


State 33

   16 stm_list: stm .

    $default  reduce using rule 16 (stm_list)


State 34

   19 stm: var_decl .

    $default  reduce using rule 19 (stm)


State 35

   18 stm: exp .
   21    | exp . ASG exp
   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    ASG        shift, and go to state 46
    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52

    $default  reduce using rule 18 (stm)


State 36

   27 exp: fcall .

    $default  reduce using rule 27 (exp)


State 37

   12 param_decl: ID COLON type .
   41 type: type . L_BRACKET R_BRACKET

    L_BRACKET  shift, and go to state 13

    $default  reduce using rule 12 (param_decl)


State 38

   24 exp: ID .
   35 fcall: ID . L_PAREN fcall_args R_PAREN
   36      | ID . L_PAREN R_PAREN

    L_PAREN  shift, and go to state 42

    $default  reduce using rule 24 (exp)


State 39

   20 stm: WHILE exp . DO stm_list END
   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    DO         shift, and go to state 53
    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52


State 40

   17 stm: RETURN exp .
   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52

    $default  reduce using rule 17 (stm)


State 41

   22 var_decl: ID COLON . type ASG exp

    TYPE_INT  shift, and go to state 9
    TYPE_STR  shift, and go to state 10

    type  go to state 54


State 42

   35 fcall: ID L_PAREN . fcall_args R_PAREN
   36      | ID L_PAREN . R_PAREN

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    R_PAREN  shift, and go to state 55
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp         go to state 56
    fcall       go to state 36
    fcall_args  go to state 57


State 43

   23 exp: L_PAREN exp . R_PAREN
   28    | exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    R_PAREN    shift, and go to state 58
    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52


State 44

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET
   34    | SUB exp .

    L_BRACKET  shift, and go to state 47

    $default  reduce using rule 34 (exp)


State 45

   15 stm_list: stm_list stm .

    $default  reduce using rule 15 (stm_list)


State 46

   21 stm: exp ASG . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 59
    fcall  go to state 36


State 47

   33 exp: exp L_BRACKET . exp R_BRACKET

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 60
    fcall  go to state 36


State 48

   28 exp: exp ADD . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 61
    fcall  go to state 36


State 49

   29 exp: exp SUB . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 62
    fcall  go to state 36


State 50

   30 exp: exp MUL . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 63
    fcall  go to state 36


State 51

   31 exp: exp DIV . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 64
    fcall  go to state 36


State 52

   32 exp: exp LT . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 65
    fcall  go to state 36


State 53

   20 stm: WHILE exp DO . stm_list END

    WHILE    shift, and go to state 25
    RETURN   shift, and go to state 26
    ID       shift, and go to state 27
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    stm_list  go to state 66
    stm       go to state 33
    var_decl  go to state 34
    exp       go to state 35
    fcall     go to state 36


State 54

   22 var_decl: ID COLON type . ASG exp
   41 type: type . L_BRACKET R_BRACKET

    ASG        shift, and go to state 67
    L_BRACKET  shift, and go to state 13


State 55

   36 fcall: ID L_PAREN R_PAREN .

    $default  reduce using rule 36 (fcall)


State 56

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET
   38 fcall_args: exp .

    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52

    $default  reduce using rule 38 (fcall_args)


State 57

   35 fcall: ID L_PAREN fcall_args . R_PAREN
   37 fcall_args: fcall_args . COMMA exp

    R_PAREN  shift, and go to state 68
    COMMA    shift, and go to state 69


State 58

   23 exp: L_PAREN exp R_PAREN .

    $default  reduce using rule 23 (exp)


State 59

   21 stm: exp ASG exp .
   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52

    $default  reduce using rule 21 (stm)


State 60

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET
   33    | exp L_BRACKET exp . R_BRACKET

    L_BRACKET  shift, and go to state 47
    R_BRACKET  shift, and go to state 70
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52


State 61

   28 exp: exp . ADD exp
   28    | exp ADD exp .
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51

    $default  reduce using rule 28 (exp)


State 62

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   29    | exp SUB exp .
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51

    $default  reduce using rule 29 (exp)


State 63

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   30    | exp MUL exp .
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47

    $default  reduce using rule 30 (exp)


State 64

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   31    | exp DIV exp .
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47

    $default  reduce using rule 31 (exp)


State 65

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   32    | exp LT exp .
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51

    $default  reduce using rule 32 (exp)


State 66

   15 stm_list: stm_list . stm
   20 stm: WHILE exp DO stm_list . END

    END      shift, and go to state 71
    WHILE    shift, and go to state 25
    RETURN   shift, and go to state 26
    ID       shift, and go to state 27
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    stm       go to state 45
    var_decl  go to state 34
    exp       go to state 35
    fcall     go to state 36


State 67

   22 var_decl: ID COLON type ASG . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 72
    fcall  go to state 36


State 68

   35 fcall: ID L_PAREN fcall_args R_PAREN .

    $default  reduce using rule 35 (fcall)


State 69

   37 fcall_args: fcall_args COMMA . exp

    ID       shift, and go to state 38
    L_PAREN  shift, and go to state 28
    INT      shift, and go to state 29
    STR      shift, and go to state 30
    SUB      shift, and go to state 31

    exp    go to state 73
    fcall  go to state 36


State 70

   33 exp: exp L_BRACKET exp R_BRACKET .

    $default  reduce using rule 33 (exp)


State 71

   20 stm: WHILE exp DO stm_list END .

    $default  reduce using rule 20 (stm)


State 72

   22 var_decl: ID COLON type ASG exp .
   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52

    $default  reduce using rule 22 (var_decl)


State 73

   28 exp: exp . ADD exp
   29    | exp . SUB exp
   30    | exp . MUL exp
   31    | exp . DIV exp
   32    | exp . LT exp
   33    | exp . L_BRACKET exp R_BRACKET
   37 fcall_args: fcall_args COMMA exp .

    L_BRACKET  shift, and go to state 47
    ADD        shift, and go to state 48
    SUB        shift, and go to state 49
    MUL        shift, and go to state 50
    DIV        shift, and go to state 51
    LT         shift, and go to state 52

    $default  reduce using rule 37 (fcall_args)
