State 23 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce


Grammar

    0 $accept: module $end

    1 module: flist

    2 flist: function flist
    3      | %empty

    4 function: FUNCTION ID COLON type function_content END

    5 function_content: function_params function_body

    6 function_params: PARAMS param_decls
    7                | %empty

    8 param_decls: ID COLON type param_decls
    9            | %empty

   10 function_body: BODY stm_list

   11 stm_list: stm stm_list
   12         | %empty

   13 stm: RETURN exp
   14    | exp
   15    | var_decl
   16    | WHILE exp DO stm_list END
   17    | exp ASG exp

   18 var_decl: ID COLON type ASG exp

   19 exp: L_PAREN exp R_PAREN
   20    | ID
   21    | INT
   22    | STR
   23    | fcall
   24    | exp ADD exp
   25    | exp SUB exp
   26    | exp MUL exp
   27    | exp DIV exp
   28    | exp LT exp
   29    | exp L_BRACKET exp R_BRACKET
   30    | SUB exp

   31 fcall: ID L_PAREN fcall_args R_PAREN

   32 fcall_args: exp
   33           | exp COMMA fcall_args
   34           | %empty

   35 type: TYPE_INT
   36     | TYPE_STR
   37     | type L_BRACKET R_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
ID (259) 4 8 18 20 31
COLON (260) 4 8 18
END (261) 4 16
TYPE_INT (262) 35
TYPE_STR (263) 36
PARAMS (264) 6
BODY (265) 10
RETURN (266) 13
ADD (267) 24
SUB (268) 25 30
MUL (269) 26
DIV (270) 27
ASG (271) 17 18
L_PAREN (272) 19 31
R_PAREN (273) 19 31
L_BRACKET (274) 29 37
R_BRACKET (275) 29 37
INT (276) 21
STR (277) 22
COMMA (278) 33
UMINUS (279)
WHILE (280) 16
DO (281) 16
LT (282) 28


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
module (29)
    on left: 1, on right: 0
flist (30)
    on left: 2 3, on right: 1 2
function (31)
    on left: 4, on right: 2
function_content (32)
    on left: 5, on right: 4
function_params (33)
    on left: 6 7, on right: 5
param_decls (34)
    on left: 8 9, on right: 6 8
function_body (35)
    on left: 10, on right: 5
stm_list (36)
    on left: 11 12, on right: 10 11 16
stm (37)
    on left: 13 14 15 16 17, on right: 11
var_decl (38)
    on left: 18, on right: 15
exp (39)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 13 14 16
    17 18 19 24 25 26 27 28 29 30 32 33
fcall (40)
    on left: 31, on right: 23
fcall_args (41)
    on left: 32 33 34, on right: 31 33
type (42)
    on left: 35 36 37, on right: 4 8 18 37


State 0

    0 $accept: . module $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (flist)

    module    go to state 2
    flist     go to state 3
    function  go to state 4


State 1

    4 function: FUNCTION . ID COLON type function_content END

    ID  shift, and go to state 5


State 2

    0 $accept: module . $end

    $end  shift, and go to state 6


State 3

    1 module: flist .

    $default  reduce using rule 1 (module)


State 4

    2 flist: function . flist

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (flist)

    flist     go to state 7
    function  go to state 4


State 5

    4 function: FUNCTION ID . COLON type function_content END

    COLON  shift, and go to state 8


State 6

    0 $accept: module $end .

    $default  accept


State 7

    2 flist: function flist .

    $default  reduce using rule 2 (flist)


State 8

    4 function: FUNCTION ID COLON . type function_content END

    TYPE_INT  shift, and go to state 9
    TYPE_STR  shift, and go to state 10

    type  go to state 11


State 9

   35 type: TYPE_INT .

    $default  reduce using rule 35 (type)


State 10

   36 type: TYPE_STR .

    $default  reduce using rule 36 (type)


State 11

    4 function: FUNCTION ID COLON type . function_content END
   37 type: type . L_BRACKET R_BRACKET

    PARAMS     shift, and go to state 12
    L_BRACKET  shift, and go to state 13

    $default  reduce using rule 7 (function_params)

    function_content  go to state 14
    function_params   go to state 15


State 12

    6 function_params: PARAMS . param_decls

    ID  shift, and go to state 16

    $default  reduce using rule 9 (param_decls)

    param_decls  go to state 17


State 13

   37 type: type L_BRACKET . R_BRACKET

    R_BRACKET  shift, and go to state 18


State 14

    4 function: FUNCTION ID COLON type function_content . END

    END  shift, and go to state 19


State 15

    5 function_content: function_params . function_body

    BODY  shift, and go to state 20

    function_body  go to state 21


State 16

    8 param_decls: ID . COLON type param_decls

    COLON  shift, and go to state 22


State 17

    6 function_params: PARAMS param_decls .

    $default  reduce using rule 6 (function_params)


State 18

   37 type: type L_BRACKET R_BRACKET .

    $default  reduce using rule 37 (type)


State 19

    4 function: FUNCTION ID COLON type function_content END .

    $default  reduce using rule 4 (function)


State 20

   10 function_body: BODY . stm_list

    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28
    WHILE    shift, and go to state 29

    $default  reduce using rule 12 (stm_list)

    stm_list  go to state 30
    stm       go to state 31
    var_decl  go to state 32
    exp       go to state 33
    fcall     go to state 34


State 21

    5 function_content: function_params function_body .

    $default  reduce using rule 5 (function_content)


State 22

    8 param_decls: ID COLON . type param_decls

    TYPE_INT  shift, and go to state 9
    TYPE_STR  shift, and go to state 10

    type  go to state 35


State 23

   18 var_decl: ID . COLON type ASG exp
   20 exp: ID .
   31 fcall: ID . L_PAREN fcall_args R_PAREN

    COLON    shift, and go to state 36
    L_PAREN  shift, and go to state 37

    L_PAREN   [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


State 24

   13 stm: RETURN . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 39
    fcall  go to state 34


State 25

   30 exp: SUB . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 40
    fcall  go to state 34


State 26

   19 exp: L_PAREN . exp R_PAREN

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 41
    fcall  go to state 34


State 27

   21 exp: INT .

    $default  reduce using rule 21 (exp)


State 28

   22 exp: STR .

    $default  reduce using rule 22 (exp)


State 29

   16 stm: WHILE . exp DO stm_list END

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 42
    fcall  go to state 34


State 30

   10 function_body: BODY stm_list .

    $default  reduce using rule 10 (function_body)


State 31

   11 stm_list: stm . stm_list

    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28
    WHILE    shift, and go to state 29

    $default  reduce using rule 12 (stm_list)

    stm_list  go to state 43
    stm       go to state 31
    var_decl  go to state 32
    exp       go to state 33
    fcall     go to state 34


State 32

   15 stm: var_decl .

    $default  reduce using rule 15 (stm)


State 33

   14 stm: exp .
   17    | exp . ASG exp
   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    ASG        shift, and go to state 48
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    SUB       [reduce using rule 14 (stm)]
    $default  reduce using rule 14 (stm)


State 34

   23 exp: fcall .

    $default  reduce using rule 23 (exp)


State 35

    8 param_decls: ID COLON type . param_decls
   37 type: type . L_BRACKET R_BRACKET

    ID         shift, and go to state 16
    L_BRACKET  shift, and go to state 13

    $default  reduce using rule 9 (param_decls)

    param_decls  go to state 51


State 36

   18 var_decl: ID COLON . type ASG exp

    TYPE_INT  shift, and go to state 9
    TYPE_STR  shift, and go to state 10

    type  go to state 52


State 37

   31 fcall: ID L_PAREN . fcall_args R_PAREN

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    $default  reduce using rule 34 (fcall_args)

    exp         go to state 53
    fcall       go to state 34
    fcall_args  go to state 54


State 38

   20 exp: ID .
   31 fcall: ID . L_PAREN fcall_args R_PAREN

    L_PAREN  shift, and go to state 37

    L_PAREN   [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


State 39

   13 stm: RETURN exp .
   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    SUB       [reduce using rule 13 (stm)]
    $default  reduce using rule 13 (stm)


State 40

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET
   30    | SUB exp .

    $default  reduce using rule 30 (exp)


State 41

   19 exp: L_PAREN exp . R_PAREN
   24    | exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    R_PAREN    shift, and go to state 55
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50


State 42

   16 stm: WHILE exp . DO stm_list END
   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    DO         shift, and go to state 56
    LT         shift, and go to state 50


State 43

   11 stm_list: stm stm_list .

    $default  reduce using rule 11 (stm_list)


State 44

   24 exp: exp ADD . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 57
    fcall  go to state 34


State 45

   25 exp: exp SUB . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 58
    fcall  go to state 34


State 46

   26 exp: exp MUL . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 59
    fcall  go to state 34


State 47

   27 exp: exp DIV . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 60
    fcall  go to state 34


State 48

   17 stm: exp ASG . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 61
    fcall  go to state 34


State 49

   29 exp: exp L_BRACKET . exp R_BRACKET

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 62
    fcall  go to state 34


State 50

   28 exp: exp LT . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 63
    fcall  go to state 34


State 51

    8 param_decls: ID COLON type param_decls .

    $default  reduce using rule 8 (param_decls)


State 52

   18 var_decl: ID COLON type . ASG exp
   37 type: type . L_BRACKET R_BRACKET

    ASG        shift, and go to state 64
    L_BRACKET  shift, and go to state 13


State 53

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET
   32 fcall_args: exp .
   33           | exp . COMMA fcall_args

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    COMMA      shift, and go to state 65
    LT         shift, and go to state 50

    $default  reduce using rule 32 (fcall_args)


State 54

   31 fcall: ID L_PAREN fcall_args . R_PAREN

    R_PAREN  shift, and go to state 66


State 55

   19 exp: L_PAREN exp R_PAREN .

    $default  reduce using rule 19 (exp)


State 56

   16 stm: WHILE exp DO . stm_list END

    ID       shift, and go to state 23
    RETURN   shift, and go to state 24
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28
    WHILE    shift, and go to state 29

    $default  reduce using rule 12 (stm_list)

    stm_list  go to state 67
    stm       go to state 31
    var_decl  go to state 32
    exp       go to state 33
    fcall     go to state 34


State 57

   24 exp: exp . ADD exp
   24    | exp ADD exp .
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    $default  reduce using rule 24 (exp)


State 58

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   25    | exp SUB exp .
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    $default  reduce using rule 25 (exp)


State 59

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   26    | exp MUL exp .
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    $default  reduce using rule 26 (exp)


State 60

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   27    | exp DIV exp .
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    $default  reduce using rule 27 (exp)


State 61

   17 stm: exp ASG exp .
   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    SUB       [reduce using rule 17 (stm)]
    $default  reduce using rule 17 (stm)


State 62

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET
   29    | exp L_BRACKET exp . R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    R_BRACKET  shift, and go to state 68
    LT         shift, and go to state 50


State 63

   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   28    | exp LT exp .
   29    | exp . L_BRACKET exp R_BRACKET

    L_BRACKET  shift, and go to state 49

    $default  reduce using rule 28 (exp)


State 64

   18 var_decl: ID COLON type ASG . exp

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    exp    go to state 69
    fcall  go to state 34


State 65

   33 fcall_args: exp COMMA . fcall_args

    ID       shift, and go to state 38
    SUB      shift, and go to state 25
    L_PAREN  shift, and go to state 26
    INT      shift, and go to state 27
    STR      shift, and go to state 28

    $default  reduce using rule 34 (fcall_args)

    exp         go to state 53
    fcall       go to state 34
    fcall_args  go to state 70


State 66

   31 fcall: ID L_PAREN fcall_args R_PAREN .

    $default  reduce using rule 31 (fcall)


State 67

   16 stm: WHILE exp DO stm_list . END

    END  shift, and go to state 71


State 68

   29 exp: exp L_BRACKET exp R_BRACKET .

    $default  reduce using rule 29 (exp)


State 69

   18 var_decl: ID COLON type ASG exp .
   24 exp: exp . ADD exp
   25    | exp . SUB exp
   26    | exp . MUL exp
   27    | exp . DIV exp
   28    | exp . LT exp
   29    | exp . L_BRACKET exp R_BRACKET

    ADD        shift, and go to state 44
    SUB        shift, and go to state 45
    MUL        shift, and go to state 46
    DIV        shift, and go to state 47
    L_BRACKET  shift, and go to state 49
    LT         shift, and go to state 50

    SUB       [reduce using rule 18 (var_decl)]
    $default  reduce using rule 18 (var_decl)


State 70

   33 fcall_args: exp COMMA fcall_args .

    $default  reduce using rule 33 (fcall_args)


State 71

   16 stm: WHILE exp DO stm_list END .

    $default  reduce using rule 16 (stm)
